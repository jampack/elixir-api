type User {
    id: ID!
    name: String!
    email: Email!
    avatar: String
    role: UserRoleEnum!
    cards: [Card!] @hasMany(type: "paginator", relation: "cards", defaultCount: 15, maxCount: 50)
    teams: [Team!] @belongsToMany(type: "paginator", defaultCount: 10, maxCount: 15)
    projects: [Project!] @belongsToMany(type: "paginator", defaultCount: 10, maxCount: 15)
    setting: UserSetting @hasOne
    attendanceScheme: AttendanceScheme @belongsTo
    attendance: [AttendanceLog] @hasMany(type: "paginator", relation: "attendanceLogs", defaultCount: 30, maxCount: 360)
    status: UserStatusEnum!
    created_at: DateTime!
    updated_at: DateTime!
}

enum UserRoleEnum {
    ADMINISTRATOR @enum(value: 1)
    MANAGER @enum(value: 2)
    DEVELOPER @enum(value: 3)
}

enum UserStatusEnum {
    INACTIVE @enum(value: 0)
    ACTIVE @enum(value: 1)
}

enum UserOrderByEnum {
    NAME @enum(value: "name")
    ROLE @enum(value: "role")
}

## Inputs

input CreateUserInput {
    name: String!
    email: Email!
    avatar: String
    role: UserRoleEnum!
}
