###
#   Auth Mutations
###
extend type Mutation {
    login(data: LoginInput @spread): AuthPayload!
    @field(resolver: "App\\GraphQL\\Mutations\\Authentication\\Login@resolve")
    @loginValidation
}

###
#   User Mutations
###
extend type Mutation @middleware(checks: ["auth:api"]) {
    createUser(data: CreateUserInput @spread): User
    @create(model: "App\\Models\\User")
    @createUserValidation
}

###
#   Project Mutations
###
extend type Mutation @middleware(checks: ["auth:api"]) {
    createProject(data: CreateProjectInput @spread): Project
    @create(model: "App\\Models\\Project")
    @inject(context: "user.id", name: "owner_id")
    @createProjectValidation

    createProjectModule(data: CreateProjectModuleInput @spread): ProjectModule
    @create(model: "App\\Models\\ProjectModule")
    @createProjectModuleValidation
}

###
#   Settings Mutations
###
extend type Mutation @middleware(checks: ["auth:api"]) {
    createAttendanceScheme(data: CreateAttendanceSchemeInput @spread): AttendanceScheme
    @create(model: "App\\Models\\AttendanceScheme")
    @createAttendanceSchemeValidation
}

###
#   Cards Mutations
###
extend type Mutation @middleware(checks: ["auth:api"]) {
    createCard(data: CreateCardInput @spread): Card
    @create(model: "App\\Models\\Card")
    @inject(context: "user.id", name: "user_id")
    @createCardValidation
}

